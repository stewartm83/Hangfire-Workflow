version: "3.4"

services:
    dashboard:
        image: ${DOCKER_REGISTRY-}dashboard
        container_name: hf-dashboard
        build:
            context: .
            dockerfile: Dashboard/Dockerfile
        networks:
            - frontend

    worker:
        image: ${DOCKER_REGISTRY-}worker
        container_name: hf-worker
        build:
            context: .
            dockerfile: Worker/Dockerfile
        networks:
            - backend

    workflow.api:
        image: ${DOCKER_REGISTRY-}workflow
        container_name: hf-workflow-api
        build:
            context: .
            dockerfile: Workflow.Api/Dockerfile
        networks:
            - backend

    redis:
        build:
            context: .
            dockerfile: Infra/Redis/Dockerfile
        container_name: hf-redis
        ports:
            - "127.0.0.1:26379:6379"
        networks:
            - frontend
            - backend

    mongo:
        build:
            context: .
            dockerfile: Infra/Mongo/Dockerfile
        container_name: hf-mongo
        ports:
            - "127.0.0.1:27017:27017"
        environment:
            MONGO_INITDB_ROOT_USERNAME: root
            MONGO_INITDB_ROOT_PASSWORD: roam@247
        volumes:
            - db-data:/data/db
            - mongo-config:/data/configdb
        networks:
            - frontend
            - backend

    elasticsearch:
        build:
            context: .
            dockerfile: Infra/ElasticSearch/Dockerfile
        container_name: hf-elastic
        volumes:
            - esdata:/usr/share/elasticsearch/data
        ports:
            - "127.0.0.1:9200:9200"
        networks:
            - frontend
            - backend

    kibana:
        container_name: hf-kibana
        build: 
            context: .
            dockerfile: Infra/Kibana/Dockerfile
        ports: 
            - "127.0.0.1:5601:5601"
        environment: 
            SERVER_NAME: kibana
            ELASTICSEARCH_HOSTS: http://127.0.0.1:9200
        networks: 
            - frontend

volumes:
    db-data:
    mongo-config:
    esdata:

networks:
    frontend:
    backend:
